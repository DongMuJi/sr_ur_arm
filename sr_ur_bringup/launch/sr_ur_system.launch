<launch>
  <!-- This launch file is for using the right and left UR arm without a Shadow hand -->

  <!-- Set to true for debugging -->
  <arg name="debug" default="false"/>

  <!-- Loads the robot description -->
  <param name="robot_description" command="$(find xacro)/xacro.py '$(find sr_ur_description)/urdf/biarm.urdf.xacro'"/>

  <!-- low level controllers for right and left arm and a higher level trajectory controller -->
  <rosparam command="load" file="$(find sr_ur_robot_hw)/config/la_sr_ur_robot_hw.yaml"/>
  <rosparam command="load" file="$(find sr_ur_robot_hw)/config/ra_sr_ur_robot_hw.yaml"/>
  <rosparam command="load" file="$(find sr_robot_launch)/config/la_trajectory_controller.yaml"/>
  <rosparam command="load" file="$(find sr_robot_launch)/config/ra_trajectory_controller.yaml"/>
  <param name="ra_sr_ur_robot_hw/robot_program_path" type="str" value="$(find sr_ur_bringup)/robot_programs/"/>
  <param name="la_sr_ur_robot_hw/robot_program_path" type="str" value="$(find sr_ur_bringup)/robot_programs/"/>

  <!-- real time control loop -->
  <group if="$(arg debug)">
    <node name="realtime_loop" pkg="ros_ethercat_loop" type="ros_ethercat_loop" args="-i _ -r robot_description" output="screen"
      launch-prefix="gdb -ex run -args"/>
  </group>
  <group unless="$(arg debug)">
    <node name="realtime_loop" pkg="ros_ethercat_loop" type="ros_ethercat_loop" args="-i _ -r robot_description" output="screen"
      launch-prefix="ros_grant"/>
  </group>

  <node name="traj_controller_spawner" pkg="controller_manager" type="spawner" output="screen" args="--stopped ra_trajectory_controller la_trajectory_controller"/>

  <include file="$(find ros_ethercat_model)/launch/joint_state_publisher.launch"/>
</launch>
